name: Daily VMI Data Sync and Deploy

on:
  schedule:
    - cron: '0 10 * * *'  # Run daily at 10 AM UTC (6 AM EST)
  workflow_dispatch:  # Allow manual triggering

jobs:
  sync-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.0'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libcurl4-openssl-dev libssl-dev

        - name: Setup R dependencies
      uses: r-lib/actions/setup-r-dependencies@v2
      with:
        extra-packages: |
          RCurl
          tidyverse
          rsconnect
          shiny
          DT
          gridExtra
          ggplot2
          patchwork
          hexbin
          ggiraph
          httr2
          MASS
          curl
          lubridate
          
    - name: Configure rsconnect
      env:
        SHINYAPPS_ACCOUNT: ${{ secrets.SHINYAPPS_ACCOUNT }}
        SHINYAPPS_TOKEN: ${{ secrets.SHINYAPPS_TOKEN }}
        SHINYAPPS_SECRET: ${{ secrets.SHINYAPPS_SECRET }}
        run: |
        Rscript -e "
        rsconnect::setAccountInfo(
          name='${{ secrets.SHINYAPPS_ACCOUNT }}',
          token='${{ secrets.SHINYAPPS_TOKEN }}',
          secret='${{ secrets.SHINYAPPS_SECRET }}'
        )"
        
    - name: Sync VMI data
      id: sync_data
      run: |
        Rscript automated_data_sync.R
        echo "sync_success=true" >> $GITHUB_OUTPUT
      continue-on-error: true
        
    - name: Check if data directory exists
      id: check_data
      run: |
        if [ -d "data" ] && [ "$(ls -A data)" ]; then
          echo "data_updated=true" >> $GITHUB_OUTPUT
          echo "Found data files:"
          ls -la data/
        else
          echo "data_updated=false" >> $GITHUB_OUTPUT
          echo "No data directory or no files found"
        fi
        
    - name: Deploy to shinyapps.io
      if: steps.check_data.outputs.data_updated == 'true'
      run: Rscript deploy_script.R
      
    - name: Commit updated data
      if: steps.check_data.outputs.data_updated == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add data/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "Auto-update VMI data $(date)"
          git push
        fi
